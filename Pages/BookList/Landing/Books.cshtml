@page
@model Bezaleel_Bagoes_A_A_fdtest.Pages.BookList.Landing.BooksModel
@{
    ViewData["Title"] = "Book List";
}

<div class="book-container">
    <h2>📚 All Uploaded Books</h2>

    <div class="form-links">
        <a asp-page="/Auth/Login">Login</a>
    </div>

    <form method="get" class="book-filter">
        <input type="text" name="Author" placeholder="Filter by Author" value="@Model.Author" />

        <select name="RatingRange">
            <option value="">-- Rating Range --</option>
            @foreach (var range in new[] { "0-1", "1-2", "2-3", "3-4", "4-5" })
            {
                <option value="@range" selected="@(Model.RatingRange == range)">@range.Replace("-", "–")</option>
            }
        </select>

        <input type="date" name="FromDate" value="@Model.FromDate?.ToString("yyyy-MM-dd")" />
        <input type="date" name="ToDate" value="@Model.ToDate?.ToString("yyyy-MM-dd")" />
        <button type="submit">Filter</button>
    </form>

    <br></br>

    @if (!Model.Books.Any())
    {
        <p>No books found.</p>
    }
    else
    {
        <div class="book-grid-livechart">
            @foreach (var book in Model.Books)
            {
                <div class="book-card-livechart">
                    <div class="card-header">
                        <div class="book-title">@book.Title</div>
                        <div class="book-rating">Rating: @book.Rating @RenderStars(book.Rating)</div>
                    </div>

                    <div class="card-body-horizontal">
                        <div class="book-image">
                            <img src="@book.ThumbnailUrl" alt="Cover" />
                        </div>
                        <div class="book-details-right">
                            <div class="book-author"><strong>by</strong> @book.Author</div>
                            <div class="book-description-scroll">@book.Description</div>
                        </div>
                    </div>

                    <div class="book-footer">
                        <small>Uploaded at: @book.CreatedAt.ToString("yyyy-MM-dd")</small><br />
                    </div>
                </div>
            }
        </div>

        <br></br>

        <div class="pagination">
            Page:
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <form method="get" style="display:inline;">
                    <input type="hidden" name="Author" value="@Model.Author" />
                    <input type="hidden" name="RatingRange" value="@Model.RatingRange" />
                    <input type="hidden" name="FromDate" value="@Model.FromDate?.ToString("yyyy-MM-dd")" />
                    <input type="hidden" name="ToDate" value="@Model.ToDate?.ToString("yyyy-MM-dd")" />
                    <input type="hidden" name="CurrentPage" value="@i" />
                    <button type="submit" class="page-btn @(i == Model.Page ? "active" : "")">@i</button>
                </form>
            }
        </div>
    }
</div>

@functions {
    public IHtmlContent RenderStars(float? rating)
    {
        var value = rating ?? 0f;
        int fullStars = (int)Math.Floor(value);
        bool halfStar = value % 1 >= 0.5f;
        int emptyStars = 5 - fullStars - (halfStar ? 1 : 0);

        var html = new System.Text.StringBuilder();
        for (int i = 0; i < fullStars; i++) html.Append("<span class='star full'>★</span>");
        if (halfStar) html.Append("<span class='star half'>★</span>");
        for (int i = 0; i < emptyStars; i++) html.Append("<span class='star empty'>★</span>");

        return new HtmlString(html.ToString());
    }
}
